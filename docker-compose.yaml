version: '3.8'

services:
  app:
    build: .
    container_name: organisations_service
    restart: unless-stopped
    environment:
      - DB_NAME=organisations
      - DB_USER=postgres_user
      - DB_PASSWORD=12345
      - DB_HOST=postgres
      - DB_PORT=5432
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgis/postgis:15-3.3
    container_name: postgres_db
    environment:
      POSTGRES_DB: organisations
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: 12345
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d organisations"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      /bin/bash -c "
      echo 'Starting PostgreSQL with PostGIS...';
      docker-entrypoint.sh postgres &
      while ! pg_isready -U postgres_user -d organisations -q; do
        sleep 1
      done;
      echo 'Creating PostGIS extension...';
      psql -U postgres_user -d organisations -c 'CREATE EXTENSION IF NOT EXISTS postgis';
      echo 'PostgreSQL ready';
      tail -f /dev/null
      "
  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080
    environment:
      # Uncomment to enable container actions (stop, start, restart). See https://dozzle.dev/guide/actions
      - DOZZLE_ENABLE_ACTIONS=true
      #
      # Uncomment to allow access to container shells. See https://dozzle.dev/guide/shell
      - DOZZLE_ENABLE_SHELL=true
      #
      # Uncomment to enable authentication. See https://dozzle.dev/guide/authentication
      # - DOZZLE_AUTH_PROVIDER=simple

volumes:
  postgres_data:
